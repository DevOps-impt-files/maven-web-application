node {

try{
        echo "the job name is: ${env.job_name}"
       echo "the node name is: ${env.node_name}"
       echo "the build number is: {env.build_number}"
   
       def mavenHome = tool name: 'maven3.8.6'
        stage('CheckOutCode'){
         git branch: 'development', credentialsId: '75fb4e82-e9a7-4868-9a41-5de65afd80a7', url: 'https://github.com/DevOps-impt-files/maven-web-application.git'
        }
           
    
        stage('Build'){
        sh "${mavenHome}/bin/mvn clean package"
        }
          
        stage('executesonarqubereport'){
         sh "${mavenHome}/bin/mvn clean sonar:sonar"
         }
         
         stage('uploadartifactstonexus'){
         sh "${mavenHome}/bin/mvn clean package sonar:sonar deploy"
         }
         
         stage('DeployAppIntoTomcatServer'){
         sshagent(['d13ba8a8-7eac-4c76-a6fb-724a32b940f2']){
         sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.43.65:/opt/apache-tomcat-9.0.65/webapps/"   
          }
        }
          
        }//try closing
        catch (e){
        currentbuild.result="FAILURE"
        throw e
        }//catch closing 
        finally{
        slacknotifications(currentbuild.result)
     }
     }
      
    //Code Snippet for sending slack notifications.


def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
            
